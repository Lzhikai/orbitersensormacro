
########################### Necessary for Functionality ###########################

[delayed_gcode clear_display]
gcode:
  M117
 
[force_move]
enable_force_move: true

[pause_resume]
recover_velocity: 50

#### This is for debugging only to get states of objects/vars ####
[gcode_macro debugprint]
gcode:
    {% set printing = printer.state %}
    M118 { printing }
    M118 {printer.idle_timeout}
    M118 {printer.pause_resume.is_paused}

#M300 (beep) Should be defined to your liking somehwere...

########################## Filament Sensor Logic ##########################

[filament_switch_sensor fsensor]
pause_on_runout: False
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
    {% if printer.idle_timeout.state == 'Printing' %}
        M118 "In PRESS PRINTING if statement"
        M300
        M300
        M300       
        OCTO_PAUSE
    {% else %}
        M118 "Reached Not Printing else statement! Should probably investigate this if you didn't load filament."
        #Something else could be executed here if no filament while not printing...
    {% endif %}
    
insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.

  #only used in not paused elif.
  {% set temp_target = 235 %} 
 
  {% if printer.pause_resume.is_paused %}
      M118 "Insert while Paused"
      FORCE_MOVE STEPPER=extruder DISTANCE=20 VELOCITY=5 ACCEL=1000  # load filament inside the gears - force move needs to be enabled
      FORCE_MOVE STEPPER=extruder DISTANCE=150 VELOCITY=5 ACCEL=1000
      M400                         # wait for current move to finish
      M300                     # play single beep - only works if you have the M300 macro in use
      M118 Done Inserting while Paused
      
  {% elif not printer.pause_resume.is_paused %}
      M118 "Insert While Not Paused"

      FORCE_MOVE STEPPER=extruder DISTANCE=20 VELOCITY=5 ACCEL=1000  # load filament inside the gears - force move needs to be enabled
      
      {% if printer.extruder.temperature < temp_target|float*0.9 %}
            M109 S{temp_target|float*0.9} # wait till 0.9 of extruder temp is reached, then continue  
      {% endif %}
      
      M104 S{temp_target}       #continue heating to preset no waiting
      
      FORCE_MOVE STEPPER=extruder DISTANCE=150 VELOCITY=5 ACCEL=1000
      M400                         # wait for current move to finish
      M104 S0                      # set hotend temperature to 0
      M300                     # play single beep - only works if you have the M300 macro in use
      M118 Done Inserting While Not Paused
  {% endif %}

event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
pause_delay: 5
#   UNUSED SINCE PAUSE IS DISABLED; NO EFFECT.
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: !PA1
#   Probably inverted (!) for you as well!
#   The pin on which the switch is connected. This parameter must be
#   provided.


############################ Unload Button ############################
  
[gcode_button filament_unload]
pin: PA2                     # SU - use the input pin you have connected the sensor to
press_gcode:
    M117
release_gcode:
  {% set temp_target = 235 %}
  {% if printer.idle_timeout.state == "Printing" %}
      M117 Not allowed!
      UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
      M118 Cannot unload filament while not paused! Should Probably investigate if you didn't push unload!
  {% else %}
      M117 Filament unload
      M118 Filament unload
      UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
      M82                      # set extruder to absolute mode

      #M104 S{temp_target}           # Set extruder temperature no waiting
      
      {% if printer.extruder.temperature < temp_target|float*0.9 %}
            M109 S{temp_target|float*0.9} # wait till 0.9 of extruder temp is reached, then continue  
      {% endif %}
      
      M104 S{temp_target}       #continue heating to preset no waiting
      G4 P5000                     # wait for five seconds
      
      FORCE_MOVE STEPPER=extruder DISTANCE=10 VELOCITY=2 ACCEL=1000  # Form Filament Tip
      FORCE_MOVE STEPPER=extruder DISTANCE=-5 VELOCITY=10 ACCEL=1000  # Move Filament away from hotend
      FORCE_MOVE STEPPER=extruder DISTANCE=-80 VELOCITY=5 ACCEL=1000  # Unload Filament Completely
      FORCE_MOVE STEPPER=extruder DISTANCE=-50 VELOCITY=7.5 ACCEL=1000  # Unload some more because why not?
      M104 S0                  # set hotend temperature to 0
      M300                     # play single beep - only works if you have the M300 macro in use
      M118 Done Unloading!

  {% endif %}

 ############################## Extension to Pause/Resume Macros ##############################
  
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 0.5
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max position from your printer.cfg
  {% set x_park = printer.toolhead.axis_minimum.x|float + 20.0 %}
  {% set y_park = printer.toolhead.axis_minimum.y|float + 20.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 5.0) %}
      {% set z_safe = 5.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
  
  #PURGE SOME FILAMENT AFTER REACHING PARK POSITION TO MAKE ROOM TO INSERT NEW FILAMENT
  FORCE_MOVE STEPPER=extruder DISTANCE=20 VELOCITY=5 ACCEL=1000
  
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% set PAUSE_STATE = PAUSE_STATE2 %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {% else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    #G91
    #G1 E{E} F2100
    
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
  
[gcode_macro OCTO_PAUSE]
gcode:
    RESPOND TYPE=command MSG="action:pause"
    
    

 ######################## OCTOPRINT SETTINGS ########################
 # Settings -> Printer -> GCode Scripts
 #
 # After print job is paused: PAUSE
 #
 # Before print job is resumed: RESUME
